<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bdqn.sl.mapper.SysUserMapper" >
  <resultMap id="BaseResultMap" type="com.bdqn.sl.pojo.SysUser" >
    <id column="userId" property="userid" jdbcType="INTEGER" />
    <result column="roleId" property="roleid" jdbcType="INTEGER" />
    <result column="referee" property="referee" jdbcType="INTEGER" />
    <result column="associatorId" property="associatorid" jdbcType="INTEGER" />
    <result column="loginName" property="loginname" jdbcType="VARCHAR" />
    <result column="loginPwd" property="loginpwd" jdbcType="VARCHAR" />
    <result column="loginPwd2" property="loginpwd2" jdbcType="VARCHAR" />
    <result column="uname" property="uname" jdbcType="VARCHAR" />
    <result column="cardTypeId" property="cardtypeid" jdbcType="INTEGER" />
    <result column="cardnumber" property="cardnumber" jdbcType="VARCHAR" />
    <result column="cardimg" property="cardimg" jdbcType="VARCHAR" />
    <result column="yhimg" property="yhimg" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="postalcode" property="postalcode" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="bankName" property="bankname" jdbcType="VARCHAR" />
    <result column="bankNumber" property="banknumber" jdbcType="VARCHAR" />
    <result column="bankUname" property="bankuname" jdbcType="VARCHAR" />
    <result column="yMoney" property="ymoney" jdbcType="REAL" />
    <result column="createUid" property="createuid" jdbcType="INTEGER" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updateUid" property="updateuid" jdbcType="INTEGER" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    userId, roleId, referee, associatorId, loginName, loginPwd, loginPwd2, uname, cardTypeId, 
    cardnumber, cardimg, yhimg, phone, email, postalcode, address, bankName, bankNumber, 
    bankUname, yMoney, createUid, created, updateUid, updated, sex, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bdqn.sl.pojo.SysUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bdqn.sl.pojo.SysUserExample" >
    delete from sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bdqn.sl.pojo.SysUser" >
    insert into sys_user (userId, roleId, referee, 
      associatorId, loginName, loginPwd, 
      loginPwd2, uname, cardTypeId, 
      cardnumber, cardimg, yhimg, 
      phone, email, postalcode, 
      address, bankName, bankNumber, 
      bankUname, yMoney, createUid, 
      created, updateUid, updated, 
      sex, status)
    values (#{userid,jdbcType=INTEGER}, #{roleid,jdbcType=INTEGER}, #{referee,jdbcType=INTEGER}, 
      #{associatorid,jdbcType=INTEGER}, #{loginname,jdbcType=VARCHAR}, #{loginpwd,jdbcType=VARCHAR}, 
      #{loginpwd2,jdbcType=VARCHAR}, #{uname,jdbcType=VARCHAR}, #{cardtypeid,jdbcType=INTEGER}, 
      #{cardnumber,jdbcType=VARCHAR}, #{cardimg,jdbcType=VARCHAR}, #{yhimg,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{postalcode,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR}, #{bankname,jdbcType=VARCHAR}, #{banknumber,jdbcType=VARCHAR}, 
      #{bankuname,jdbcType=VARCHAR}, #{ymoney,jdbcType=REAL}, #{createuid,jdbcType=INTEGER}, 
      #{created,jdbcType=TIMESTAMP}, #{updateuid,jdbcType=INTEGER}, #{updated,jdbcType=TIMESTAMP}, 
      #{sex,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bdqn.sl.pojo.SysUser" >
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="roleid != null" >
        roleId,
      </if>
      <if test="referee != null" >
        referee,
      </if>
      <if test="associatorid != null" >
        associatorId,
      </if>
      <if test="loginname != null" >
        loginName,
      </if>
      <if test="loginpwd != null" >
        loginPwd,
      </if>
      <if test="loginpwd2 != null" >
        loginPwd2,
      </if>
      <if test="uname != null" >
        uname,
      </if>
      <if test="cardtypeid != null" >
        cardTypeId,
      </if>
      <if test="cardnumber != null" >
        cardnumber,
      </if>
      <if test="cardimg != null" >
        cardimg,
      </if>
      <if test="yhimg != null" >
        yhimg,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="postalcode != null" >
        postalcode,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="bankname != null" >
        bankName,
      </if>
      <if test="banknumber != null" >
        bankNumber,
      </if>
      <if test="bankuname != null" >
        bankUname,
      </if>
      <if test="ymoney != null" >
        yMoney,
      </if>
      <if test="createuid != null" >
        createUid,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updateuid != null" >
        updateUid,
      </if>
      <if test="updated != null" >
        updated,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="referee != null" >
        #{referee,jdbcType=INTEGER},
      </if>
      <if test="associatorid != null" >
        #{associatorid,jdbcType=INTEGER},
      </if>
      <if test="loginname != null" >
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="loginpwd != null" >
        #{loginpwd,jdbcType=VARCHAR},
      </if>
      <if test="loginpwd2 != null" >
        #{loginpwd2,jdbcType=VARCHAR},
      </if>
      <if test="uname != null" >
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="cardtypeid != null" >
        #{cardtypeid,jdbcType=INTEGER},
      </if>
      <if test="cardnumber != null" >
        #{cardnumber,jdbcType=VARCHAR},
      </if>
      <if test="cardimg != null" >
        #{cardimg,jdbcType=VARCHAR},
      </if>
      <if test="yhimg != null" >
        #{yhimg,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="postalcode != null" >
        #{postalcode,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="bankname != null" >
        #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="banknumber != null" >
        #{banknumber,jdbcType=VARCHAR},
      </if>
      <if test="bankuname != null" >
        #{bankuname,jdbcType=VARCHAR},
      </if>
      <if test="ymoney != null" >
        #{ymoney,jdbcType=REAL},
      </if>
      <if test="createuid != null" >
        #{createuid,jdbcType=INTEGER},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuid != null" >
        #{updateuid,jdbcType=INTEGER},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bdqn.sl.pojo.SysUserExample" resultType="java.lang.Integer" >
    select count(*) from sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_user
    <set >
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.roleid != null" >
        roleId = #{record.roleid,jdbcType=INTEGER},
      </if>
      <if test="record.referee != null" >
        referee = #{record.referee,jdbcType=INTEGER},
      </if>
      <if test="record.associatorid != null" >
        associatorId = #{record.associatorid,jdbcType=INTEGER},
      </if>
      <if test="record.loginname != null" >
        loginName = #{record.loginname,jdbcType=VARCHAR},
      </if>
      <if test="record.loginpwd != null" >
        loginPwd = #{record.loginpwd,jdbcType=VARCHAR},
      </if>
      <if test="record.loginpwd2 != null" >
        loginPwd2 = #{record.loginpwd2,jdbcType=VARCHAR},
      </if>
      <if test="record.uname != null" >
        uname = #{record.uname,jdbcType=VARCHAR},
      </if>
      <if test="record.cardtypeid != null" >
        cardTypeId = #{record.cardtypeid,jdbcType=INTEGER},
      </if>
      <if test="record.cardnumber != null" >
        cardnumber = #{record.cardnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.cardimg != null" >
        cardimg = #{record.cardimg,jdbcType=VARCHAR},
      </if>
      <if test="record.yhimg != null" >
        yhimg = #{record.yhimg,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.postalcode != null" >
        postalcode = #{record.postalcode,jdbcType=INTEGER},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.bankname != null" >
        bankName = #{record.bankname,jdbcType=VARCHAR},
      </if>
      <if test="record.banknumber != null" >
        bankNumber = #{record.banknumber,jdbcType=VARCHAR},
      </if>
      <if test="record.bankuname != null" >
        bankUname = #{record.bankuname,jdbcType=VARCHAR},
      </if>
      <if test="record.ymoney != null" >
        yMoney = #{record.ymoney,jdbcType=REAL},
      </if>
      <if test="record.createuid != null" >
        createUid = #{record.createuid,jdbcType=INTEGER},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateuid != null" >
        updateUid = #{record.updateuid,jdbcType=INTEGER},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_user
    set userId = #{record.userid,jdbcType=INTEGER},
      roleId = #{record.roleid,jdbcType=INTEGER},
      referee = #{record.referee,jdbcType=INTEGER},
      associatorId = #{record.associatorid,jdbcType=INTEGER},
      loginName = #{record.loginname,jdbcType=VARCHAR},
      loginPwd = #{record.loginpwd,jdbcType=VARCHAR},
      loginPwd2 = #{record.loginpwd2,jdbcType=VARCHAR},
      uname = #{record.uname,jdbcType=VARCHAR},
      cardTypeId = #{record.cardtypeid,jdbcType=INTEGER},
      cardnumber = #{record.cardnumber,jdbcType=VARCHAR},
      cardimg = #{record.cardimg,jdbcType=VARCHAR},
      yhimg = #{record.yhimg,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      postalcode = #{record.postalcode,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      bankName = #{record.bankname,jdbcType=VARCHAR},
      bankNumber = #{record.banknumber,jdbcType=VARCHAR},
      bankUname = #{record.bankuname,jdbcType=VARCHAR},
      yMoney = #{record.ymoney,jdbcType=REAL},
      createUid = #{record.createuid,jdbcType=INTEGER},
      created = #{record.created,jdbcType=TIMESTAMP},
      updateUid = #{record.updateuid,jdbcType=INTEGER},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      sex = #{record.sex,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bdqn.sl.pojo.SysUser" >
    update sys_user
    <set >
      <if test="roleid != null" >
        roleId = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="referee != null" >
        referee = #{referee,jdbcType=INTEGER},
      </if>
      <if test="associatorid != null" >
        associatorId = #{associatorid,jdbcType=INTEGER},
      </if>
      <if test="loginname != null" >
        loginName = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="loginpwd != null" >
        loginPwd = #{loginpwd,jdbcType=VARCHAR},
      </if>
      <if test="loginpwd2 != null" >
        loginPwd2 = #{loginpwd2,jdbcType=VARCHAR},
      </if>
      <if test="uname != null" >
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="cardtypeid != null" >
        cardTypeId = #{cardtypeid,jdbcType=INTEGER},
      </if>
      <if test="cardnumber != null" >
        cardnumber = #{cardnumber,jdbcType=VARCHAR},
      </if>
      <if test="cardimg != null" >
        cardimg = #{cardimg,jdbcType=VARCHAR},
      </if>
      <if test="yhimg != null" >
        yhimg = #{yhimg,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="postalcode != null" >
        postalcode = #{postalcode,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="bankname != null" >
        bankName = #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="banknumber != null" >
        bankNumber = #{banknumber,jdbcType=VARCHAR},
      </if>
      <if test="bankuname != null" >
        bankUname = #{bankuname,jdbcType=VARCHAR},
      </if>
      <if test="ymoney != null" >
        yMoney = #{ymoney,jdbcType=REAL},
      </if>
      <if test="createuid != null" >
        createUid = #{createuid,jdbcType=INTEGER},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuid != null" >
        updateUid = #{updateuid,jdbcType=INTEGER},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bdqn.sl.pojo.SysUser" >
    update sys_user
    set roleId = #{roleid,jdbcType=INTEGER},
      referee = #{referee,jdbcType=INTEGER},
      associatorId = #{associatorid,jdbcType=INTEGER},
      loginName = #{loginname,jdbcType=VARCHAR},
      loginPwd = #{loginpwd,jdbcType=VARCHAR},
      loginPwd2 = #{loginpwd2,jdbcType=VARCHAR},
      uname = #{uname,jdbcType=VARCHAR},
      cardTypeId = #{cardtypeid,jdbcType=INTEGER},
      cardnumber = #{cardnumber,jdbcType=VARCHAR},
      cardimg = #{cardimg,jdbcType=VARCHAR},
      yhimg = #{yhimg,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      postalcode = #{postalcode,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      bankName = #{bankname,jdbcType=VARCHAR},
      bankNumber = #{banknumber,jdbcType=VARCHAR},
      bankUname = #{bankuname,jdbcType=VARCHAR},
      yMoney = #{ymoney,jdbcType=REAL},
      createUid = #{createuid,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      updateUid = #{updateuid,jdbcType=INTEGER},
      updated = #{updated,jdbcType=TIMESTAMP},
      sex = #{sex,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
</mapper>